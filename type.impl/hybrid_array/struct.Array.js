(function() {
    var type_impls = Object.fromEntries([["hybrid_array",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Array%3CArray%3CT,+U%3E,+V%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#380-447\">Source</a><a href=\"#impl-Array%3CArray%3CT,+U%3E,+V%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, V&gt; <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;<a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;, V&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,\n    V: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_flattened\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#415-417\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"hybrid_array/struct.Array.html#tymethod.as_flattened\" class=\"fn\">as_flattened</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Takes a <code>&amp;Array&lt;Array&lt;T, N&gt;, &gt;&gt;</code>, and flattens it to a <code>&amp;[T]</code>.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>This panics if the length of the resulting slice would overflow a <code>usize</code>.</p>\n<p>This is only possible when flattening a slice of arrays of zero-sized\ntypes, and thus tends to be irrelevant in practice. If\n<code>size_of::&lt;T&gt;() &gt; 0</code>, this will never panic.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>hybrid_array::{Array, typenum::{U0, U2, U3, U5, U10}};\n\n<span class=\"kw\">let </span>a: Array&lt;Array&lt;usize, U3&gt;, U2&gt; = Array([Array([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]), Array([<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>])]);\n<span class=\"macro\">assert_eq!</span>(a.as_flattened(), <span class=\"kw-2\">&amp;</span>[<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]);\n\n<span class=\"kw\">let </span>b: Array&lt;Array&lt;usize, U2&gt;, U3&gt; = Array([Array([<span class=\"number\">1</span>, <span class=\"number\">2</span>]), Array([<span class=\"number\">3</span>, <span class=\"number\">4</span>]), Array([<span class=\"number\">5</span>, <span class=\"number\">6</span>])]);\n<span class=\"macro\">assert_eq!</span>(a.as_flattened(), b.as_flattened());\n\n<span class=\"kw\">let </span>c: Array&lt;[usize; <span class=\"number\">2</span>], U3&gt; = Array([[<span class=\"number\">1</span>, <span class=\"number\">2</span>], [<span class=\"number\">3</span>, <span class=\"number\">4</span>], [<span class=\"number\">5</span>, <span class=\"number\">6</span>]]);\n<span class=\"macro\">assert_eq!</span>(a.as_flattened(), c.as_flattened());\n\n<span class=\"kw\">let </span>slice_of_empty_arrays: <span class=\"kw-2\">&amp;</span>Array&lt;Array&lt;i32, U5&gt;, U0&gt; = <span class=\"kw-2\">&amp;</span>Array::from_fn(|<span class=\"kw\">_</span>| Array([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>]));\n<span class=\"macro\">assert!</span>(slice_of_empty_arrays.as_flattened().is_empty());\n\n<span class=\"kw\">let </span>empty_slice_of_arrays: <span class=\"kw-2\">&amp;</span>Array&lt;Array&lt;u32, U10&gt;, U0&gt;  = <span class=\"kw-2\">&amp;</span>Array([]);\n<span class=\"macro\">assert!</span>(empty_slice_of_arrays.as_flattened().is_empty());</code></pre></div></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_flattened_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#444-446\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"hybrid_array/struct.Array.html#tymethod.as_flattened_mut\" class=\"fn\">as_flattened_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Takes a <code>&amp;mut Array&lt;Array&lt;T, N&gt;,M&gt;</code>, and flattens it to a <code>&amp;mut [T]</code>.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>This panics if the length of the resulting slice would overflow a <code>usize</code>.</p>\n<p>This is only possible when flattening a slice of arrays of zero-sized\ntypes, and thus tends to be irrelevant in practice. If\n<code>size_of::&lt;T&gt;() &gt; 0</code>, this will never panic.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>hybrid_array::{Array, typenum::U3};\n\n<span class=\"kw\">fn </span>add_5_to_all(slice: <span class=\"kw-2\">&amp;mut </span>[i32]) {\n    <span class=\"kw\">for </span>i <span class=\"kw\">in </span>slice {\n        <span class=\"kw-2\">*</span>i += <span class=\"number\">5</span>;\n    }\n}\n\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>array: Array&lt;Array&lt;i32, U3&gt;, U3&gt; = Array([Array([<span class=\"number\">1_i32</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>]), Array([<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">6</span>]), Array([<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">9</span>])]);\nadd_5_to_all(array.as_flattened_mut());\n<span class=\"macro\">assert_eq!</span>(array, Array([Array([<span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">8</span>]), Array([<span class=\"number\">9</span>, <span class=\"number\">10</span>, <span class=\"number\">11</span>]), Array([<span class=\"number\">12</span>, <span class=\"number\">13</span>, <span class=\"number\">14</span>])]));</code></pre></div></div></details></div></details>",0,"hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Array%3CMaybeUninit%3CT%3E,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#483-524\">Source</a><a href=\"#impl-Array%3CMaybeUninit%3CT%3E,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.uninit\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#488-499\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"hybrid_array/struct.Array.html#tymethod.uninit\" class=\"fn\">uninit</a>() -&gt; <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, U&gt;</h4></section></summary><div class=\"docblock\"><p>Create an uninitialized array of <a href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\"><code>MaybeUninit</code></a>s for the given type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assume_init\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#508-523\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"hybrid_array/struct.Array.html#tymethod.assume_init\" class=\"fn\">assume_init</a>(self) -&gt; <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Extract the values from an array of <code>MaybeUninit</code> containers.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>It is up to the caller to guarantee that all elements of the array are in an initialized\nstate.</p>\n</div></details></div></details>",0,"hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/from_fn.rs.html#10-33\">Source</a><a href=\"#impl-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_fn\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/from_fn.rs.html#16-18\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hybrid_array/struct.Array.html#tymethod.from_fn\" class=\"fn\">from_fn</a>(f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>) -&gt; T) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create array where each array element <code>T</code> is returned by the <code>f</code> call.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_fn\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/from_fn.rs.html#26-32\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hybrid_array/struct.Array.html#tymethod.try_from_fn\" class=\"fn\">try_from_fn</a>&lt;E&gt;(f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, E&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, E&gt;</h4></section></summary><div class=\"docblock\"><p>Create array fallibly where each array element <code>T</code> is returned by the <code>f</code> call, or return\nan error if any are encountered.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>Propagates the <code>E</code> type returned from the provided <code>F</code> in the event of error.</p>\n</div></details></div></details>",0,"hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/iter.rs.html#23-43\">Source</a><a href=\"#impl-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/iter.rs.html#34-42\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hybrid_array/struct.Array.html#tymethod.try_from_iter\" class=\"fn\">try_from_iter</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;&gt;(\n    iter: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"hybrid_array/struct.TryFromIteratorError.html\" title=\"struct hybrid_array::TryFromIteratorError\">TryFromIteratorError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Construct an array from the given iterator, returning <a href=\"hybrid_array/struct.TryFromIteratorError.html\" title=\"struct hybrid_array::TryFromIteratorError\"><code>TryFromIteratorError</code></a> in the event\nthat the number of items in the iterator does not match the array size.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>Returns <a href=\"hybrid_array/struct.TryFromIteratorError.html\" title=\"struct hybrid_array::TryFromIteratorError\"><code>TryFromIteratorError</code></a> in the event the iterator does not return a number of\nitems which is exactly equal to the array size.</p>\n</div></details></div></details>",0,"hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#184-378\">Source</a><a href=\"#impl-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#190-194\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"hybrid_array/struct.Array.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns a slice containing the entire array. Equivalent to <code>&amp;s[..]</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#198-202\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"hybrid_array/struct.Array.html#tymethod.as_mut_slice\" class=\"fn\">as_mut_slice</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable slice containing the entire array. Equivalent to <code>&amp;mut s[..]</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ptr\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#206-208\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"hybrid_array/struct.Array.html#tymethod.as_ptr\" class=\"fn\">as_ptr</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.pointer.html\">*const T</a></h4></section></summary><div class=\"docblock\"><p>Returns a pointer to the start of the array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_ptr\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#212-214\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"hybrid_array/struct.Array.html#tymethod.as_mut_ptr\" class=\"fn\">as_mut_ptr</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.pointer.html\">*mut T</a></h4></section></summary><div class=\"docblock\"><p>Returns a mutable pointer to the start of the array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#218-220\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hybrid_array/struct.Array.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.Iter.html\" title=\"struct core::slice::iter::Iter\">Iter</a>&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator over the array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#224-226\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hybrid_array/struct.Array.html#tymethod.iter_mut\" class=\"fn\">iter_mut</a>(&amp;mut self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/slice/iter/struct.IterMut.html\" title=\"struct core::slice::iter::IterMut\">IterMut</a>&lt;'_, T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator that allows modifying each value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#230-235\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hybrid_array/struct.Array.html#tymethod.map\" class=\"fn\">map</a>&lt;F, O&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;O, U&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T) -&gt; O,</div></h4></section></summary><div class=\"docblock\"><p>Returns an array of the same size as <code>self</code>, with function <code>f</code> applied to each element in\norder.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.concat\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#239-255\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hybrid_array/struct.Array.html#tymethod.concat\" class=\"fn\">concat</a>&lt;N&gt;(self, other: <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, N&gt;) -&gt; <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, <a class=\"type\" href=\"typenum/operator_aliases/type.Sum.html\" title=\"type typenum::operator_aliases::Sum\">Sum</a>&lt;U, N&gt;&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;N&gt;,\n    <a class=\"type\" href=\"typenum/operator_aliases/type.Sum.html\" title=\"type typenum::operator_aliases::Sum\">Sum</a>&lt;U, N&gt;: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h4></section></summary><div class=\"docblock\"><p>Concatenates <code>self</code> with <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#261-273\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hybrid_array/struct.Array.html#tymethod.split\" class=\"fn\">split</a>&lt;N&gt;(self) -&gt; (<a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, N&gt;, <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, <a class=\"type\" href=\"typenum/operator_aliases/type.Diff.html\" title=\"type typenum::operator_aliases::Diff\">Diff</a>&lt;U, N&gt;&gt;)<div class=\"where\">where\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;N&gt;,\n    N: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,\n    <a class=\"type\" href=\"typenum/operator_aliases/type.Diff.html\" title=\"type typenum::operator_aliases::Diff\">Diff</a>&lt;U, N&gt;: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h4></section></summary><div class=\"docblock\"><p>Splits <code>self</code> at index <code>N</code> in two arrays.</p>\n<p>New arrays hold the original memory from <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#277-289\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hybrid_array/struct.Array.html#tymethod.split_ref\" class=\"fn\">split_ref</a>&lt;N&gt;(&amp;self) -&gt; (&amp;'_ <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, N&gt;, &amp;'_ <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, <a class=\"type\" href=\"typenum/operator_aliases/type.Diff.html\" title=\"type typenum::operator_aliases::Diff\">Diff</a>&lt;U, N&gt;&gt;)<div class=\"where\">where\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;N&gt;,\n    N: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,\n    <a class=\"type\" href=\"typenum/operator_aliases/type.Diff.html\" title=\"type typenum::operator_aliases::Diff\">Diff</a>&lt;U, N&gt;: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h4></section></summary><div class=\"docblock\"><p>Splits <code>&amp;self</code> at index <code>N</code> in two array references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_ref_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#293-305\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hybrid_array/struct.Array.html#tymethod.split_ref_mut\" class=\"fn\">split_ref_mut</a>&lt;N&gt;(\n    &amp;mut self,\n) -&gt; (&amp;'_ mut <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, N&gt;, &amp;'_ mut <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, <a class=\"type\" href=\"typenum/operator_aliases/type.Diff.html\" title=\"type typenum::operator_aliases::Diff\">Diff</a>&lt;U, N&gt;&gt;)<div class=\"where\">where\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;N&gt;,\n    N: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,\n    <a class=\"type\" href=\"typenum/operator_aliases/type.Diff.html\" title=\"type typenum::operator_aliases::Diff\">Diff</a>&lt;U, N&gt;: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h4></section></summary><div class=\"docblock\"><p>Splits <code>&amp;mut self</code> at index <code>N</code> in two mutable array references.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_as_chunks\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#314-328\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"hybrid_array/struct.Array.html#tymethod.slice_as_chunks\" class=\"fn\">slice_as_chunks</a>(buf: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>) -&gt; (&amp;[Self], &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>)</h4></section></summary><div class=\"docblock\"><p>Splits the shared slice into a slice of <code>U</code>-element arrays, starting at the beginning\nof the slice, and a remainder slice with length strictly less than <code>U</code>.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if <code>U</code> is 0.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_as_chunks_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#337-351\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"hybrid_array/struct.Array.html#tymethod.slice_as_chunks_mut\" class=\"fn\">slice_as_chunks_mut</a>(buf: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>) -&gt; (&amp;mut [Self], &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>)</h4></section></summary><div class=\"docblock\"><p>Splits the exclusive slice into a slice of <code>U</code>-element arrays, starting at the beginning\nof the slice, and a remainder slice with length strictly less than <code>U</code>.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if <code>U</code> is 0.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_as_flattened\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#355-364\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"hybrid_array/struct.Array.html#tymethod.slice_as_flattened\" class=\"fn\">slice_as_flattened</a>(slice: &amp;[Self]) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Obtain a flattened slice from a slice of array chunks.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_as_flattened_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#368-377\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"hybrid_array/struct.Array.html#tymethod.slice_as_flattened_mut\" class=\"fn\">slice_as_flattened_mut</a>(slice: &amp;mut [Self]) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Obtain a mutable flattened slice from a mutable slice of array chunks.</p>\n</div></details></div></details>",0,"hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#450-481\">Source</a><a href=\"#impl-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>&lt;ArrayType&lt;T&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_slice_to_core\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#456-459\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"hybrid_array/struct.Array.html#tymethod.cast_slice_to_core\" class=\"fn\">cast_slice_to_core</a>(slice: &amp;[Self]) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>]</h4></section></summary><div class=\"docblock\"><p>Transform slice to slice of core array type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_slice_to_core_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#463-466\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"hybrid_array/struct.Array.html#tymethod.cast_slice_to_core_mut\" class=\"fn\">cast_slice_to_core_mut</a>(slice: &amp;mut [Self]) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>]</h4></section></summary><div class=\"docblock\"><p>Transform mutable slice to mutable slice of core array type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_slice_from_core\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#470-473\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"hybrid_array/struct.Array.html#tymethod.cast_slice_from_core\" class=\"fn\">cast_slice_from_core</a>(slice: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>]) -&gt; &amp;[Self]</h4></section></summary><div class=\"docblock\"><p>Transform slice to slice of core array type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_slice_from_core_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#477-480\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"hybrid_array/struct.Array.html#tymethod.cast_slice_from_core_mut\" class=\"fn\">cast_slice_from_core_mut</a>(slice: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>]) -&gt; &amp;mut [Self]</h4></section></summary><div class=\"docblock\"><p>Transform mutable slice to mutable slice of core array type.</p>\n</div></details></div></details>",0,"hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#993-1032\">Source</a><a href=\"#impl-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#1004-1006\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hybrid_array/struct.Array.html#tymethod.from_slice\" class=\"fn\">from_slice</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>) -&gt; &amp;Self</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.2.0: use <code>TryFrom</code> instead</span></div></span></summary><div class=\"docblock\"><p>Convert the given slice into a reference to a hybrid array.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if the slice’s length doesn’t match the array type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#1015-1017\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hybrid_array/struct.Array.html#tymethod.from_mut_slice\" class=\"fn\">from_mut_slice</a>(slice: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>) -&gt; &amp;mut Self</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.2.0: use <code>TryFrom</code> instead</span></div></span></summary><div class=\"docblock\"><p>Convert the given mutable slice to a mutable reference to a hybrid array.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if the slice’s length doesn’t match the array type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#1026-1031\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hybrid_array/struct.Array.html#tymethod.clone_from_slice\" class=\"fn\">clone_from_slice</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.2.0: use <code>TryFrom</code> instead</span></div></span></summary><div class=\"docblock\"><p>Clone the contents of the slice as a new hybrid array.</p>\n<h5 id=\"panics-2\"><a class=\"doc-anchor\" href=\"#panics-2\">§</a>Panics</h5>\n<p>Panics if the slice’s length doesn’t match the array type.</p>\n</div></details></div></details>",0,"hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsArrayMut%3CT%3E-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/traits.rs.html#119-126\">Source</a><a href=\"#impl-AsArrayMut%3CT%3E-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"hybrid_array/trait.AsArrayMut.html\" title=\"trait hybrid_array::AsArrayMut\">AsArrayMut</a>&lt;T&gt; for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_array_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/traits.rs.html#123-125\">Source</a><a href=\"#method.as_array_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hybrid_array/trait.AsArrayMut.html#tymethod.as_array_mut\" class=\"fn\">as_array_mut</a>(&amp;mut self) -&gt; &amp;mut Self</h4></section></summary><div class='docblock'>Converts this type into a mutable <a href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\"><code>Array</code></a> reference.</div></details></div></details>","AsArrayMut<T>","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsArrayRef%3CT%3E-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/traits.rs.html#110-117\">Source</a><a href=\"#impl-AsArrayRef%3CT%3E-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"hybrid_array/trait.AsArrayRef.html\" title=\"trait hybrid_array::AsArrayRef\">AsArrayRef</a>&lt;T&gt; for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_array_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/traits.rs.html#114-116\">Source</a><a href=\"#method.as_array_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hybrid_array/trait.AsArrayRef.html#tymethod.as_array_ref\" class=\"fn\">as_array_ref</a>(&amp;self) -&gt; &amp;Self</h4></section></summary><div class='docblock'>Converts this type into an immutable <a href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\"><code>Array</code></a> reference.</div></details></div></details>","AsArrayRef<T>","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BT%5D%3E-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#556-564\">Source</a><a href=\"#impl-AsMut%3C%5BT%5D%3E-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#561-563\">Source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[T]>","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BT;+N%5D%3E-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#566-574\">Source</a><a href=\"#impl-AsMut%3C%5BT;+N%5D%3E-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>&lt;ArrayType&lt;T&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#571-573\">Source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[T; N]>","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BT%5D%3E-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#536-544\">Source</a><a href=\"#impl-AsRef%3C%5BT%5D%3E-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#541-543\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[T]>","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BT;+N%5D%3E-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#546-554\">Source</a><a href=\"#impl-AsRef%3C%5BT;+N%5D%3E-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>&lt;ArrayType&lt;T&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#551-553\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[T; N]>","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CArray%3CT,+U%3E%3E-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#526-534\">Source</a><a href=\"#impl-AsRef%3CArray%3CT,+U%3E%3E-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;&gt; for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#531-533\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;Self</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<Array<T, U>>","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AssocArraySize-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/traits.rs.html#62-67\">Source</a><a href=\"#impl-AssocArraySize-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"hybrid_array/trait.AssocArraySize.html\" title=\"trait hybrid_array::AssocArraySize\">AssocArraySize</a> for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Size\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/traits.rs.html#66\">Source</a><a href=\"#associatedtype.Size\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"hybrid_array/trait.AssocArraySize.html#associatedtype.Size\" class=\"associatedtype\">Size</a> = U</h4></section></summary><div class='docblock'>Size of an array type, expressed as a <a href=\"typenum/index.html\" title=\"mod typenum\"><code>typenum</code></a>-based <a href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\"><code>ArraySize</code></a>.</div></details></div></details>","AssocArraySize","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3C%5BT%5D%3E-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#576-584\">Source</a><a href=\"#impl-Borrow%3C%5BT%5D%3E-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#581-583\">Source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<[T]>","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3C%5BT;+N%5D%3E-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#586-594\">Source</a><a href=\"#impl-Borrow%3C%5BT;+N%5D%3E-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>&lt;ArrayType&lt;T&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#591-593\">Source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<[T; N]>","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowMut%3C%5BT%5D%3E-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#596-604\">Source</a><a href=\"#impl-BorrowMut%3C%5BT%5D%3E-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html\" title=\"trait core::borrow::BorrowMut\">BorrowMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#601-603\">Source</a><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Mutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details>","BorrowMut<[T]>","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowMut%3C%5BT;+N%5D%3E-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#606-614\">Source</a><a href=\"#impl-BorrowMut%3C%5BT;+N%5D%3E-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html\" title=\"trait core::borrow::BorrowMut\">BorrowMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>&lt;ArrayType&lt;T&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#611-613\">Source</a><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Mutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details>","BorrowMut<[T; N]>","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#616-625\">Source</a><a href=\"#impl-Clone-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#622-624\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#635-643\">Source</a><a href=\"#impl-Debug-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#640-642\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#645-654\">Source</a><a href=\"#impl-Default-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#651-653\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#656-666\">Source</a><a href=\"#impl-Deref-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#660\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#663-665\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#668-676\">Source</a><a href=\"#impl-DerefMut-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#673-675\">Source</a><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+N%5D%3E-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#685-693\">Source</a><a href=\"#impl-From%3C%5BT;+N%5D%3E-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>&lt;ArrayType&lt;T&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#690-692\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(arr: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; N]>","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CT%3E-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/iter.rs.html#45-63\">Source</a><a href=\"#impl-FromIterator%3CT%3E-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;T&gt; for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/iter.rs.html#49-62\">Source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<T>","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#793-802\">Source</a><a href=\"#impl-Hash-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#799-801\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;mut H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3CI%3E-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#804-815\">Source</a><a href=\"#impl-Index%3CI%3E-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt; for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt;,\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#809\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;I&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#812-814\">Source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, index: I) -&gt; &amp;Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<I>","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3CI%3E-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#817-826\">Source</a><a href=\"#impl-IndexMut%3CI%3E-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, I, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt; for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;I&gt;,\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#823-825\">Source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, index: I) -&gt; &amp;mut Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.Index.html#associatedtype.Output\" title=\"type core::ops::index::Index::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<I>","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/iter.rs.html#65-81\">Source</a><a href=\"#impl-IntoIterator-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/iter.rs.html#78-80\">Source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class=\"docblock\"><p>Creates a consuming iterator, that is, one that moves each value out of the array (from\nstart to end).</p>\n<p>The array cannot be used after calling this unless <code>T</code> implements <code>Copy</code>, so the whole\narray is copied.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/iter.rs.html#69\">Source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/iter.rs.html#70\">Source</a><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = &lt;&lt;U as <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>&gt;::<a class=\"associatedtype\" href=\"hybrid_array/trait.ArraySize.html#associatedtype.ArrayType\" title=\"type hybrid_array::ArraySize::ArrayType\">ArrayType</a>&lt;T&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details></div></details>","IntoIterator","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#872-881\">Source</a><a href=\"#impl-Ord-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#878-880\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1021-1023\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1060-1062\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1086-1088\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%5BT;+N%5D%3E-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#839-848\">Source</a><a href=\"#impl-PartialEq%3C%5BT;+N%5D%3E-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>&lt;ArrayType&lt;T&gt; = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#845-847\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<[T; N]>","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#828-837\">Source</a><a href=\"#impl-PartialEq-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#834-836\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#861-870\">Source</a><a href=\"#impl-PartialOrd-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#867-869\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1398\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1416\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1434\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1452\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","hybrid_array::ArrayN"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C%26%5BT%5D%3E-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#891-902\">Source</a><a href=\"#impl-TryFrom%3C%26%5BT%5D%3E-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#896\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#899-901\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(slice: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/array/struct.TryFromSliceError.html\" title=\"struct core::array::TryFromSliceError\">TryFromSliceError</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<&'a [T]>","hybrid_array::ArrayN"],["<section id=\"impl-Copy-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#627-633\">Source</a><a href=\"#impl-Copy-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,\n    U::<a class=\"associatedtype\" href=\"hybrid_array/trait.ArraySize.html#associatedtype.ArrayType\" title=\"type hybrid_array::ArraySize::ArrayType\">ArrayType</a>&lt;T&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","hybrid_array::ArrayN"],["<section id=\"impl-Eq-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#678-683\">Source</a><a href=\"#impl-Eq-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,\n    U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>,</div></h3></section>","Eq","hybrid_array::ArrayN"],["<section id=\"impl-Send-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#885\">Source</a><a href=\"#impl-Send-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3><div class=\"docblock\"><p>SAFETY: <code>Array</code> is a <code>repr(transparent)</code> newtype for <code>[T; N]</code>, so as long as <code>T: Send</code> it should\nalso be <code>Send</code>.</p>\n</div></section>","Send","hybrid_array::ArrayN"],["<section id=\"impl-Sync-for-Array%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hybrid_array/lib.rs.html#889\">Source</a><a href=\"#impl-Sync-for-Array%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U: <a class=\"trait\" href=\"hybrid_array/trait.ArraySize.html\" title=\"trait hybrid_array::ArraySize\">ArraySize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3><div class=\"docblock\"><p>SAFETY: <code>Array</code> is a <code>repr(transparent)</code> newtype for <code>[T; N]</code>, so as long as <code>T: Sync</code> it should\nalso be <code>Sync</code>.</p>\n</div></section>","Sync","hybrid_array::ArrayN"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[104266]}