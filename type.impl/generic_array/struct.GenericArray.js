(function() {
    var type_impls = Object.fromEntries([["generic_array",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsArrayMut%3CT%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/compat/hybrid_array_0_4.rs.html#16-21\">Source</a><a href=\"#impl-AsArrayMut%3CT%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a> + <a class=\"trait\" href=\"hybrid_array/traits/trait.ArraySize.html\" title=\"trait hybrid_array::traits::ArraySize\">ArraySize</a>&gt; <a class=\"trait\" href=\"hybrid_array/traits/trait.AsArrayMut.html\" title=\"trait hybrid_array::traits::AsArrayMut\">AsArrayMut</a>&lt;T&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>hybrid-array-0_4</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_array_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/compat/hybrid_array_0_4.rs.html#18-20\">Source</a><a href=\"#method.as_array_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hybrid_array/traits/trait.AsArrayMut.html#tymethod.as_array_mut\" class=\"fn\">as_array_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">HybridArray</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Converts this type into a mutable <a href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\"><code>Array</code></a> reference.</div></details></div></details>","AsArrayMut<T>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsArrayRef%3CT%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/compat/hybrid_array_0_4.rs.html#9-14\">Source</a><a href=\"#impl-AsArrayRef%3CT%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a> + <a class=\"trait\" href=\"hybrid_array/traits/trait.ArraySize.html\" title=\"trait hybrid_array::traits::ArraySize\">ArraySize</a>&gt; <a class=\"trait\" href=\"hybrid_array/traits/trait.AsArrayRef.html\" title=\"trait hybrid_array::traits::AsArrayRef\">AsArrayRef</a>&lt;T&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>hybrid-array-0_4</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_array_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/compat/hybrid_array_0_4.rs.html#11-13\">Source</a><a href=\"#method.as_array_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hybrid_array/traits/trait.AsArrayRef.html#tymethod.as_array_ref\" class=\"fn\">as_array_ref</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">HybridArray</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Converts this type into an immutable <a href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\"><code>Array</code></a> reference.</div></details></div></details>","AsArrayRef<T>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BT%5D%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#78-83\">Source</a><a href=\"#impl-AsMut%3C%5BT%5D%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#80-82\">Source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[T]>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3C%5BT;+N%5D%3E-for-GenericArray%3CT,+%3CConst%3CN%3E+as+IntoArrayLength%3E::ArrayLength%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#144-152\">Source</a><a href=\"#impl-AsMut%3C%5BT;+N%5D%3E-for-GenericArray%3CT,+%3CConst%3CN%3E+as+IntoArrayLength%3E::ArrayLength%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"generic_array/type.ConstArrayLength.html\" title=\"type generic_array::ConstArrayLength\">ConstArrayLength</a>&lt;N&gt;&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"typenum/gen/generic_const_mappings/struct.Const.html\" title=\"struct typenum::gen::generic_const_mappings::Const\">Const</a>&lt;N&gt;: <a class=\"trait\" href=\"generic_array/trait.IntoArrayLength.html\" title=\"trait generic_array::IntoArrayLength\">IntoArrayLength</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#149-151\">Source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<[T; N]>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsMut%3CArray%3CT,+N%3E%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/compat/hybrid_array_0_4.rs.html#44-49\">Source</a><a href=\"#impl-AsMut%3CArray%3CT,+N%3E%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a> + <a class=\"trait\" href=\"hybrid_array/traits/trait.ArraySize.html\" title=\"trait hybrid_array::traits::ArraySize\">ArraySize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;<a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, N&gt;&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>hybrid-array-0_4</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/compat/hybrid_array_0_4.rs.html#46-48\">Source</a><a href=\"#method.as_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html#tymethod.as_mut\" class=\"fn\">as_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">HybridArray</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Converts this type into a mutable reference of the (usually inferred) input type.</div></details></div></details>","AsMut<Array<T, N>>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BT%5D%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#71-76\">Source</a><a href=\"#impl-AsRef%3C%5BT%5D%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#73-75\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[T]>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5BT;+N%5D%3E-for-GenericArray%3CT,+%3CConst%3CN%3E+as+IntoArrayLength%3E::ArrayLength%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#135-143\">Source</a><a href=\"#impl-AsRef%3C%5BT;+N%5D%3E-for-GenericArray%3CT,+%3CConst%3CN%3E+as+IntoArrayLength%3E::ArrayLength%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"generic_array/type.ConstArrayLength.html\" title=\"type generic_array::ConstArrayLength\">ConstArrayLength</a>&lt;N&gt;&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"typenum/gen/generic_const_mappings/struct.Const.html\" title=\"struct typenum::gen::generic_const_mappings::Const\">Const</a>&lt;N&gt;: <a class=\"trait\" href=\"generic_array/trait.IntoArrayLength.html\" title=\"trait generic_array::IntoArrayLength\">IntoArrayLength</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#140-142\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[T; N]>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3CArray%3CT,+N%3E%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/compat/hybrid_array_0_4.rs.html#37-42\">Source</a><a href=\"#impl-AsRef%3CArray%3CT,+N%3E%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a> + <a class=\"trait\" href=\"hybrid_array/traits/trait.ArraySize.html\" title=\"trait hybrid_array::traits::ArraySize\">ArraySize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, N&gt;&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>hybrid-array-0_4</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/compat/hybrid_array_0_4.rs.html#39-41\">Source</a><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">HybridArray</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<Array<T, N>>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AssocArraySize-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/compat/hybrid_array_0_4.rs.html#5-7\">Source</a><a href=\"#impl-AssocArraySize-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a> + <a class=\"trait\" href=\"hybrid_array/traits/trait.ArraySize.html\" title=\"trait hybrid_array::traits::ArraySize\">ArraySize</a>&gt; <a class=\"trait\" href=\"hybrid_array/traits/trait.AssocArraySize.html\" title=\"trait hybrid_array::traits::AssocArraySize\">AssocArraySize</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>hybrid-array-0_4</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Size\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/compat/hybrid_array_0_4.rs.html#6\">Source</a><a href=\"#associatedtype.Size\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"hybrid_array/traits/trait.AssocArraySize.html#associatedtype.Size\" class=\"associatedtype\">Size</a> = N</h4></section></summary><div class='docblock'>Size of an array type, expressed as a <a href=\"typenum/index.html\" title=\"mod typenum\"><code>typenum</code></a>-based <a href=\"hybrid_array/traits/trait.ArraySize.html\" title=\"trait hybrid_array::traits::ArraySize\"><code>ArraySize</code></a>.</div></details></div></details>","AssocArraySize","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3C%5BT%5D%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#57-62\">Source</a><a href=\"#impl-Borrow%3C%5BT%5D%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#59-61\">Source</a><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<[T]>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BorrowMut%3C%5BT%5D%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#64-69\">Source</a><a href=\"#impl-BorrowMut%3C%5BT%5D%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html\" title=\"trait core::borrow::BorrowMut\">BorrowMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#66-68\">Source</a><a href=\"#method.borrow_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\" class=\"fn\">borrow_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Mutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/nightly/core/borrow/trait.BorrowMut.html#tymethod.borrow_mut\">Read more</a></div></details></div></details>","BorrowMut<[T]>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#20-25\">Source</a><a href=\"#impl-Clone-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#22-24\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Concat%3CT,+M%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#378-402\">Source</a><a href=\"#impl-Concat%3CT,+M%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N, M&gt; <a class=\"trait\" href=\"generic_array/sequence/trait.Concat.html\" title=\"trait generic_array::sequence::Concat\">Concat</a>&lt;T, M&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;M&gt;,\n    M: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>,\n    <a class=\"type\" href=\"typenum/operator_aliases/type.Sum.html\" title=\"type typenum::operator_aliases::Sum\">Sum</a>&lt;N, M&gt;: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Rest\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#384\">Source</a><a href=\"#associatedtype.Rest\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"generic_array/sequence/trait.Concat.html#associatedtype.Rest\" class=\"associatedtype\">Rest</a> = <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, M&gt;</h4></section></summary><div class='docblock'>Sequence to be concatenated with <code>self</code></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#385\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"generic_array/sequence/trait.Concat.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, &lt;N as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;M&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>Resulting sequence formed by the concatenation.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.concat\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#388-401\">Source</a><a href=\"#method.concat\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"generic_array/sequence/trait.Concat.html#tymethod.concat\" class=\"fn\">concat</a>(self, rest: Self::<a class=\"associatedtype\" href=\"generic_array/sequence/trait.Concat.html#associatedtype.Rest\" title=\"type generic_array::sequence::Concat::Rest\">Rest</a>) -&gt; Self::<a class=\"associatedtype\" href=\"generic_array/sequence/trait.Concat.html#associatedtype.Output\" title=\"type generic_array::sequence::Concat::Output\">Output</a></h4></section></summary><div class='docblock'>Concatenate, or join, two sequences.</div></details></div></details>","Concat<T, M>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ConstDefault-for-GenericArray%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impl_const_default.rs.html#20-27\">Source</a><a href=\"#impl-ConstDefault-for-GenericArray%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"const_default/trait.ConstDefault.html\" title=\"trait const_default::ConstDefault\">ConstDefault</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, U&gt;<div class=\"where\">where\n    U::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>&lt;T&gt;: <a class=\"trait\" href=\"const_default/trait.ConstDefault.html\" title=\"trait const_default::ConstDefault\">ConstDefault</a>,</div></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>const-default</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.DEFAULT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impl_const_default.rs.html#24-26\">Source</a><a href=\"#associatedconstant.DEFAULT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"const_default/trait.ConstDefault.html#associatedconstant.DEFAULT\" class=\"constant\">DEFAULT</a>: Self</h4></section></summary><div class='docblock'>The constant default value.</div></details></div></details>","ConstDefault","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#51-55\">Source</a><a href=\"#impl-Debug-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#52-54\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#13-18\">Source</a><a href=\"#impl-Default-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#15-17\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#540-547\">Source</a><a href=\"#impl-Deref-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#541\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#544-546\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#549-554\">Source</a><a href=\"#impl-DerefMut-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#551-553\">Source</a><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impl_serde.rs.html#94-108\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde_core/de/trait.Deserialize.html\" title=\"trait serde_core::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>serde</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impl_serde.rs.html#98-107\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde_core/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(deserializer: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;, D::<a class=\"associatedtype\" href=\"serde_core/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde_core::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde_core/de/trait.Deserializer.html\" title=\"trait serde_core::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde_core/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Flatten%3CT,+N,+M%3E-for-GenericArray%3CGenericArray%3CT,+N%3E,+M%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#595-607\">Source</a><a href=\"#impl-Flatten%3CT,+N,+M%3E-for-GenericArray%3CGenericArray%3CT,+N%3E,+M%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N, M&gt; <a class=\"trait\" href=\"generic_array/sequence/trait.Flatten.html\" title=\"trait generic_array::sequence::Flatten\">Flatten</a>&lt;T, N, M&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;, M&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;M&gt;,\n    M: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>,\n    <a class=\"type\" href=\"typenum/operator_aliases/type.Prod.html\" title=\"type typenum::operator_aliases::Prod\">Prod</a>&lt;N, M&gt;: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#601\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"generic_array/sequence/trait.Flatten.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, &lt;N as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;M&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>Flattened sequence type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flatten\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#604-606\">Source</a><a href=\"#method.flatten\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"generic_array/sequence/trait.Flatten.html#tymethod.flatten\" class=\"fn\">flatten</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"generic_array/sequence/trait.Flatten.html#associatedtype.Output\" title=\"type generic_array::sequence::Flatten::Output\">Output</a></h4></section></summary><div class='docblock'>Flattens the sequence into a single <code>GenericArray</code>. <a href=\"generic_array/sequence/trait.Flatten.html#tymethod.flatten\">Read more</a></div></details></div></details>","Flatten<T, N, M>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+N%5D%3E-for-GenericArray%3CT,+%3CConst%3CN%3E+as+IntoArrayLength%3E::ArrayLength%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#95-103\">Source</a><a href=\"#impl-From%3C%5BT;+N%5D%3E-for-GenericArray%3CT,+%3CConst%3CN%3E+as+IntoArrayLength%3E::ArrayLength%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"generic_array/type.ConstArrayLength.html\" title=\"type generic_array::ConstArrayLength\">ConstArrayLength</a>&lt;N&gt;&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"typenum/gen/generic_const_mappings/struct.Const.html\" title=\"struct typenum::gen::generic_const_mappings::Const\">Const</a>&lt;N&gt;: <a class=\"trait\" href=\"generic_array/trait.IntoArrayLength.html\" title=\"trait generic_array::IntoArrayLength\">IntoArrayLength</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#100-102\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; N]</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; N]>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,)%3E-for-GenericArray%3CT,+UInt%3CUTerm,+B1%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#impl-From%3C(T,)%3E-for-GenericArray%3CT,+UInt%3CUTerm,+B1%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T,)</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/gen/consts/type.U1.html\" title=\"type typenum::gen::consts::U1\">U1</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T,)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T,)>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUTerm,+B1%3E,+B0%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#impl-From%3C(T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUTerm,+B1%3E,+B0%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T)</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/gen/consts/type.U2.html\" title=\"type typenum::gen::consts::U2\">U2</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T)>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUTerm,+B1%3E,+B1%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#impl-From%3C(T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUTerm,+B1%3E,+B1%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T)</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/gen/consts/type.U3.html\" title=\"type typenum::gen::consts::U3\">U3</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T)>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#impl-From%3C(T,+T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T, T)</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/gen/consts/type.U4.html\" title=\"type typenum::gen::consts::U4\">U4</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T, T)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, T)>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B1%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#impl-From%3C(T,+T,+T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B1%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T, T, T)</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/gen/consts/type.U5.html\" title=\"type typenum::gen::consts::U5\">U5</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T, T, T)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, T, T)>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B1%3E,+B0%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#impl-From%3C(T,+T,+T,+T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B1%3E,+B0%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T, T, T, T)</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/gen/consts/type.U6.html\" title=\"type typenum::gen::consts::U6\">U6</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T, T, T, T)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, T, T, T)>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+T,+T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B1%3E,+B1%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#impl-From%3C(T,+T,+T,+T,+T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B1%3E,+B1%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T, T, T, T, T)</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/gen/consts/type.U7.html\" title=\"type typenum::gen::consts::U7\">U7</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T, T, T, T, T)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, T, T, T, T)>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+T,+T,+T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E,+B0%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#impl-From%3C(T,+T,+T,+T,+T,+T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E,+B0%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T, T, T, T, T, T)</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/gen/consts/type.U8.html\" title=\"type typenum::gen::consts::U8\">U8</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T, T, T, T, T, T)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, T, T, T, T, T)>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+T,+T,+T,+T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E,+B1%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#impl-From%3C(T,+T,+T,+T,+T,+T,+T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B0%3E,+B1%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T, T, T, T, T, T, T)</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/gen/consts/type.U9.html\" title=\"type typenum::gen::consts::U9\">U9</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T, T, T, T, T, T, T)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, T, T, T, T, T, T)>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+T,+T,+T,+T,+T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B1%3E,+B0%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#impl-From%3C(T,+T,+T,+T,+T,+T,+T,+T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B1%3E,+B0%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T, T, T, T, T, T, T, T)</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/gen/consts/type.U10.html\" title=\"type typenum::gen::consts::U10\">U10</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T, T, T, T, T, T, T, T)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, T, T, T, T, T, T, T)>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+T,+T,+T,+T,+T,+T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B1%3E,+B1%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#impl-From%3C(T,+T,+T,+T,+T,+T,+T,+T,+T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B0%3E,+B1%3E,+B1%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T, T, T, T, T, T, T, T, T)</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/gen/consts/type.U11.html\" title=\"type typenum::gen::consts::U11\">U11</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T, T, T, T, T, T, T, T, T)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, T, T, T, T, T, T, T, T)>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T,+T,+T,+T,+T,+T,+T,+T,+T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B1%3E,+B0%3E,+B0%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#impl-From%3C(T,+T,+T,+T,+T,+T,+T,+T,+T,+T,+T,+T)%3E-for-GenericArray%3CT,+UInt%3CUInt%3CUInt%3CUInt%3CUTerm,+B1%3E,+B1%3E,+B0%3E,+B0%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T, T, T, T, T, T, T, T, T, T)</a>&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, <a class=\"type\" href=\"typenum/gen/consts/type.U12.html\" title=\"type typenum::gen::consts::U12\">U12</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#178-191\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.tuple.html\">(T, T, T, T, T, T, T, T, T, T, T, T)</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T, T, T, T, T, T, T, T, T, T, T)>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CArray%3CT,+N%3E%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/compat/hybrid_array_0_4.rs.html#23-28\">Source</a><a href=\"#impl-From%3CArray%3CT,+N%3E%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a> + <a class=\"trait\" href=\"hybrid_array/traits/trait.ArraySize.html\" title=\"trait hybrid_array::traits::ArraySize\">ArraySize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">Array</a>&lt;T, N&gt;&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>hybrid-array-0_4</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/compat/hybrid_array_0_4.rs.html#25-27\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">HybridArray</a>&lt;T, N&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Array<T, N>>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3CT%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#574-590\">Source</a><a href=\"#impl-FromIterator%3CT%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;T&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#581-589\">Source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Create a <code>GenericArray</code> from an iterator.</p>\n<p>Will panic if the number of elements is not exactly the array length.</p>\n<p>See [<code>GenericArray::try_from_iter]</code> for a fallible alternative.</p>\n</div></details></div></details>","FromIterator<T>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FunctionalSequence%3CT%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#716-771\">Source</a><a href=\"#impl-FunctionalSequence%3CT%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"generic_array/functional/trait.FunctionalSequence.html\" title=\"trait generic_array::functional::FunctionalSequence\">FunctionalSequence</a>&lt;T&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"generic_array/sequence/trait.GenericSequence.html\" title=\"trait generic_array::sequence::GenericSequence\">GenericSequence</a>&lt;T, Item = T, Length = N&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#721-740\">Source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"generic_array/functional/trait.FunctionalSequence.html#method.map\" class=\"fn\">map</a>&lt;U, F&gt;(self, f: F) -&gt; <a class=\"type\" href=\"generic_array/functional/type.MappedSequence.html\" title=\"type generic_array::functional::MappedSequence\">MappedSequence</a>&lt;Self, T, U&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"generic_array/functional/trait.MappedGenericSequence.html\" title=\"trait generic_array::functional::MappedGenericSequence\">MappedGenericSequence</a>&lt;T, U&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T) -&gt; U,</div></h4></section></summary><div class='docblock'>Maps a <code>GenericSequence</code> to another <code>GenericSequence</code>. <a href=\"generic_array/functional/trait.FunctionalSequence.html#method.map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#743-751\">Source</a><a href=\"#method.zip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"generic_array/functional/trait.FunctionalSequence.html#method.zip\" class=\"fn\">zip</a>&lt;B, Rhs, U, F&gt;(self, rhs: Rhs, f: F) -&gt; <a class=\"type\" href=\"generic_array/functional/type.MappedSequence.html\" title=\"type generic_array::functional::MappedSequence\">MappedSequence</a>&lt;Self, T, U&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"generic_array/functional/trait.MappedGenericSequence.html\" title=\"trait generic_array::functional::MappedGenericSequence\">MappedGenericSequence</a>&lt;T, U&gt;,\n    Rhs: <a class=\"trait\" href=\"generic_array/functional/trait.MappedGenericSequence.html\" title=\"trait generic_array::functional::MappedGenericSequence\">MappedGenericSequence</a>&lt;B, U, Mapped = <a class=\"type\" href=\"generic_array/functional/type.MappedSequence.html\" title=\"type generic_array::functional::MappedSequence\">MappedSequence</a>&lt;Self, T, U&gt;&gt; + <a class=\"trait\" href=\"generic_array/sequence/trait.GenericSequence.html\" title=\"trait generic_array::sequence::GenericSequence\">GenericSequence</a>&lt;B, Length = Self::<a class=\"associatedtype\" href=\"generic_array/sequence/trait.GenericSequence.html#associatedtype.Length\" title=\"type generic_array::sequence::GenericSequence::Length\">Length</a>&gt;,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T, Rhs::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" title=\"type core::iter::traits::collect::IntoIterator::Item\">Item</a>) -&gt; U,</div></h4></section></summary><div class='docblock'>Combines two <code>GenericSequence</code> instances and iterates through both of them,\ninitializing a new <code>GenericSequence</code> with the result of the zipped mapping function. <a href=\"generic_array/functional/trait.FunctionalSequence.html#method.zip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fold\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#754-770\">Source</a><a href=\"#method.fold\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"generic_array/functional/trait.FunctionalSequence.html#method.fold\" class=\"fn\">fold</a>&lt;U, F&gt;(self, init: U, f: F) -&gt; U<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(U, T) -&gt; U,</div></h4></section></summary><div class='docblock'>Folds (or reduces) a sequence of data into a single value. <a href=\"generic_array/functional/trait.FunctionalSequence.html#method.fold\">Read more</a></div></details></div></details>","FunctionalSequence<T>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/compat/hybrid_array_0_4.rs.html#51-78\">Source</a><a href=\"#impl-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a> + <a class=\"trait\" href=\"hybrid_array/traits/trait.ArraySize.html\" title=\"trait hybrid_array::traits::ArraySize\">ArraySize</a>&gt; <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ha0_4\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/compat/hybrid_array_0_4.rs.html#54-56\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.as_ha0_4\" class=\"fn\">as_ha0_4</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">HybridArray</a>&lt;T, N&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>hybrid-array-0_4</code></strong> only.</div></span></summary><div class=\"docblock\"><p>From <code>&amp;self</code> of this version, create a reference to a <a href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\"><code>Array</code></a> from <code>hybrid-array</code> 0.4.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ha0_4_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/compat/hybrid_array_0_4.rs.html#63-65\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.as_ha0_4_mut\" class=\"fn\">as_ha0_4_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">HybridArray</a>&lt;T, N&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>hybrid-array-0_4</code></strong> only.</div></span></summary><div class=\"docblock\"><p>From <code>&amp;mut self</code> of this version, create a mutable reference to a <a href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\"><code>Array</code></a> from <code>hybrid-array</code> 0.4.</p>\n<p>This method is <code>const</code> since Rust 1.83.0, but non-<code>const</code> before.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_ha0_4\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/compat/hybrid_array_0_4.rs.html#69-71\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.into_ha0_4\" class=\"fn\">into_ha0_4</a>(self) -&gt; <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">HybridArray</a>&lt;T, N&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>hybrid-array-0_4</code></strong> only.</div></span></summary><div class=\"docblock\"><p>From <code>self</code> of this version, create a <a href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\"><code>Array</code></a> from <code>hybrid-array</code> 0.4.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ha0_4\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/compat/hybrid_array_0_4.rs.html#75-77\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.from_ha0_4\" class=\"fn\">from_ha0_4</a>(value: <a class=\"struct\" href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\">HybridArray</a>&lt;T, N&gt;) -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>hybrid-array-0_4</code></strong> only.</div></span></summary><div class=\"docblock\"><p>From a <a href=\"hybrid_array/struct.Array.html\" title=\"struct hybrid_array::Array\"><code>Array</code></a> from <code>hybrid-array</code> 0.4, create a <a href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\"><code>GenericArray</code></a> of this version.</p>\n</div></details></div></details>",0,"generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impl_alloc.rs.html#24-107\">Source</a><a href=\"#impl-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/impl_alloc.rs.html#29-37\">Source</a><h4 class=\"code-header\">pub fn <a href=\"generic_array/struct.GenericArray.html#tymethod.into_boxed_slice\" class=\"fn\">into_boxed_slice</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>alloc</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Converts a <code>Box&lt;GenericArray&lt;T, N&gt;&gt;</code> into <code>Box&lt;[T]&gt;</code> without reallocating.</p>\n<p>This operation is O(1), constant-time regardless of the array length N.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_vec\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/impl_alloc.rs.html#43-45\">Source</a><h4 class=\"code-header\">pub fn <a href=\"generic_array/struct.GenericArray.html#tymethod.into_vec\" class=\"fn\">into_vec</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>alloc</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Converts a <code>Box&lt;GenericArray&lt;T, N&gt;&gt;</code> into <code>Vec&lt;T&gt;</code> without reallocating.</p>\n<p>This operation is O(1), constant-time regardless of the array length N.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_boxed_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/impl_alloc.rs.html#51-57\">Source</a><h4 class=\"code-header\">pub fn <a href=\"generic_array/struct.GenericArray.html#tymethod.try_from_boxed_slice\" class=\"fn\">try_from_boxed_slice</a>(\n    slice: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;&gt;, <a class=\"struct\" href=\"generic_array/struct.LengthError.html\" title=\"struct generic_array::LengthError\">LengthError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>alloc</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Attempts to convert a <code>Box&lt;[T]&gt;</code> into <code>Box&lt;GenericArray&lt;T, N&gt;&gt;</code> without reallocating.</p>\n<p>This operation is O(1), constant-time regardless of the array length N.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_vec\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/impl_alloc.rs.html#65-67\">Source</a><h4 class=\"code-header\">pub fn <a href=\"generic_array/struct.GenericArray.html#tymethod.try_from_vec\" class=\"fn\">try_from_vec</a>(vec: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;&gt;, <a class=\"struct\" href=\"generic_array/struct.LengthError.html\" title=\"struct generic_array::LengthError\">LengthError</a>&gt;</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>alloc</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Attempts to convert a <code>Vec&lt;T&gt;</code> into <code>Box&lt;GenericArray&lt;T, N&gt;&gt;</code> without reallocating.</p>\n<p>This operation is O(1) <strong>if the <code>Vec</code> has the same length and capacity as <code>N</code></strong>,\notherwise it will be forced to call <code>Vec::shrink_to_fit</code> which is O(N),\nwhere N is the number of elements.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_boxed\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/impl_alloc.rs.html#75-80\">Source</a><h4 class=\"code-header\">pub fn <a href=\"generic_array/struct.GenericArray.html#tymethod.default_boxed\" class=\"fn\">default_boxed</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>alloc</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Alternative to <code>Box::&lt;GenericArray&lt;T, N&gt;&gt;::default()</code> that won’t overflow the stack for very large arrays.</p>\n<p>The standard <code>Box::default()</code> calls <code>default</code> on the inner type, creating it on the stack,\nand then moves it onto the heap. Optimized release builds often remove this step, but debug builds\nmay have issues.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_boxed_from_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/impl_alloc.rs.html#83-106\">Source</a><h4 class=\"code-header\">pub fn <a href=\"generic_array/struct.GenericArray.html#tymethod.try_boxed_from_iter\" class=\"fn\">try_boxed_from_iter</a>&lt;I&gt;(\n    iter: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;&gt;, <a class=\"struct\" href=\"generic_array/struct.LengthError.html\" title=\"struct generic_array::LengthError\">LengthError</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>alloc</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Like <a href=\"generic_array/struct.GenericArray.html#method.try_from_iter\" title=\"associated function generic_array::GenericArray::try_from_iter\"><code>GenericArray::try_from_iter</code></a> but returns a <code>Box&lt;GenericArray&lt;T, N&gt;&gt;</code> instead.</p>\n</div></details></div></details>",0,"generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#1001-1041\">Source</a><a href=\"#impl-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.uninit\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#1007-1012\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.uninit\" class=\"fn\">uninit</a>() -&gt; <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, N&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new array of <code>MaybeUninit&lt;T&gt;</code> items, in an uninitialized state.</p>\n<p>See <a href=\"generic_array/struct.GenericArray.html#method.assume_init\" title=\"associated function generic_array::GenericArray::assume_init\"><code>GenericArray::assume_init</code></a> for a full example.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assume_init\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#1038-1040\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"generic_array/struct.GenericArray.html#tymethod.assume_init\" class=\"fn\">assume_init</a>(array: <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;<a class=\"union\" href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html\" title=\"union core::mem::maybe_uninit::MaybeUninit\">MaybeUninit</a>&lt;T&gt;, N&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Extracts the values from a generic array of <code>MaybeUninit</code> containers.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>It is up to the caller to guarantee that all elements of the array are in an initialized state.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>array: GenericArray&lt;MaybeUninit&lt;i32&gt;, U3&gt; = GenericArray::uninit();\narray[<span class=\"number\">0</span>].write(<span class=\"number\">0</span>);\narray[<span class=\"number\">1</span>].write(<span class=\"number\">1</span>);\narray[<span class=\"number\">2</span>].write(<span class=\"number\">2</span>);\n\n<span class=\"comment\">// SAFETY: Now safe as we initialised all elements\n</span><span class=\"kw\">let </span>array = <span class=\"kw\">unsafe </span>{\n    GenericArray::assume_init(array)\n};\n\n<span class=\"macro\">assert_eq!</span>(array, <span class=\"macro\">arr!</span>[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>]);</code></pre></div></div></details></div></details>",0,"generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#1074-1108\">Source</a><a href=\"#impl-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#1080-1107\">Source</a><h4 class=\"code-header\">pub fn <a href=\"generic_array/struct.GenericArray.html#tymethod.try_from_iter\" class=\"fn\">try_from_iter</a>&lt;I&gt;(iter: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"generic_array/struct.LengthError.html\" title=\"struct generic_array::LengthError\">LengthError</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Fallible equivalent of <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" title=\"associated function core::iter::traits::collect::FromIterator::from_iter\"><code>FromIterator::from_iter</code></a></p>\n<p>Given iterator must yield exactly <code>N</code> elements or an error will be returned. Using <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html#method.take\" title=\"method core::iter::traits::iterator::Iterator::take\"><code>.take(N)</code></a>\nwith an iterator longer than the array may be helpful.</p>\n</div></details></div></details>",0,"generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#773-999\">Source</a><a href=\"#impl-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#779-781\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.len\" class=\"fn\">len</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the number of elements in the array.</p>\n<p>Equivalent to <a href=\"typenum/marker_traits/trait.Unsigned.html\" title=\"trait typenum::marker_traits::Unsigned\"><code>&lt;N as Unsigned&gt;::USIZE</code></a> where <code>N</code> is the array length.</p>\n<p>Useful for when only a type alias is available.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#785-787\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.as_slice\" class=\"fn\">as_slice</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Extracts a slice containing the entire array.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#794-796\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.as_mut_slice\" class=\"fn\">as_mut_slice</a>(&amp;mut self) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Extracts a mutable slice containing the entire array.</p>\n<p>This method is <code>const</code> since Rust 1.83.0, but non-<code>const</code> before.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#807-813\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.from_slice\" class=\"fn\">from_slice</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>) -&gt; &amp;<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a slice to a generic array reference with inferred length.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if the slice is not equal to the length of the array.</p>\n<p>Consider <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\"><code>TryFrom</code></a>/<a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryInto.html\" title=\"trait core::convert::TryInto\"><code>TryInto</code></a> for a fallible conversion,\nor <a href=\"generic_array/struct.GenericArray.html#method.try_from_slice\" title=\"associated function generic_array::GenericArray::try_from_slice\"><code>try_from_slice</code></a> for use in const expressions.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#820-826\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.try_from_slice\" class=\"fn\">try_from_slice</a>(\n    slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;, <a class=\"struct\" href=\"generic_array/struct.LengthError.html\" title=\"struct generic_array::LengthError\">LengthError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a slice to a generic array reference with inferred length.</p>\n<p>This is a fallible alternative to <a href=\"generic_array/struct.GenericArray.html#method.from_slice\" title=\"associated function generic_array::GenericArray::from_slice\"><code>from_slice</code></a>, and can be used in const expressions,\nbut <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\"><code>TryFrom</code></a>/<a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryInto.html\" title=\"trait core::convert::TryInto\"><code>TryInto</code></a> are also available to do the same thing.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mut_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#839-846\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.from_mut_slice\" class=\"fn\">from_mut_slice</a>(slice: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>) -&gt; &amp;mut <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a mutable slice to a mutable generic array reference with inferred length.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if the slice is not equal to the length of the array.</p>\n<p>Consider <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\"><code>TryFrom</code></a>/<a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryInto.html\" title=\"trait core::convert::TryInto\"><code>TryInto</code></a> for a fallible conversion.</p>\n<p>This method is <code>const</code> since Rust 1.83.0, but non-<code>const</code> before.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from_mut_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#856-861\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.try_from_mut_slice\" class=\"fn\">try_from_mut_slice</a>(\n    slice: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&amp;mut <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;, <a class=\"struct\" href=\"generic_array/struct.LengthError.html\" title=\"struct generic_array::LengthError\">LengthError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Converts a mutable slice to a mutable generic array reference with inferred length.</p>\n<p>This is a fallible alternative to <a href=\"generic_array/struct.GenericArray.html#method.from_mut_slice\" title=\"associated function generic_array::GenericArray::from_mut_slice\"><code>from_mut_slice</code></a>,\nand is equivalent to the <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\"><code>TryFrom</code></a> implementation with the added benefit of being <code>const</code>.</p>\n<p>This method is <code>const</code> since Rust 1.83.0, but non-<code>const</code> before.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chunks_from_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#870-887\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.chunks_from_slice\" class=\"fn\">chunks_from_slice</a>(slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>) -&gt; (&amp;[<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;], &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>)</h4></section></summary><div class=\"docblock\"><p>Converts a slice of <code>T</code> elements into a slice of <code>GenericArray&lt;T, N&gt;</code> chunks.</p>\n<p>Any remaining elements that do not fill the array will be returned as a second slice.</p>\n<h5 id=\"panics-2\"><a class=\"doc-anchor\" href=\"#panics-2\">§</a>Panics</h5>\n<p>Panics if <code>N</code> is <code>U0</code> <em>AND</em> the input slice is not empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.chunks_from_slice_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#899-919\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.chunks_from_slice_mut\" class=\"fn\">chunks_from_slice_mut</a>(\n    slice: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>,\n) -&gt; (&amp;mut [<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;], &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>)</h4></section></summary><div class=\"docblock\"><p>Converts a mutable slice of <code>T</code> elements into a mutable slice <code>GenericArray&lt;T, N&gt;</code> chunks.</p>\n<p>Any remaining elements that do not fill the array will be returned as a second slice.</p>\n<h5 id=\"panics-3\"><a class=\"doc-anchor\" href=\"#panics-3\">§</a>Panics</h5>\n<p>Panics if <code>N</code> is <code>U0</code> <em>AND</em> the input slice is not empty.</p>\n<p>This method is <code>const</code> since Rust 1.83.0, but non-<code>const</code> before.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_chunks\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#923-925\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.slice_from_chunks\" class=\"fn\">slice_from_chunks</a>(slice: &amp;[<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;]) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Convert a slice of <code>GenericArray&lt;T, N&gt;</code> into a slice of <code>T</code>, effectively flattening the arrays.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice_from_chunks_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#932-934\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.slice_from_chunks_mut\" class=\"fn\">slice_from_chunks_mut</a>(slice: &amp;mut [<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;]) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a></h4></section></summary><div class=\"docblock\"><p>Convert a slice of <code>GenericArray&lt;T, N&gt;</code> into a slice of <code>T</code>, effectively flattening the arrays.</p>\n<p>This method is <code>const</code> since Rust 1.83.0, but non-<code>const</code> before.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_array\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#940-945\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.from_array\" class=\"fn\">from_array</a>&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt;(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; U]</a>) -&gt; Self<div class=\"where\">where\n    <a class=\"struct\" href=\"typenum/gen/generic_const_mappings/struct.Const.html\" title=\"struct typenum::gen::generic_const_mappings::Const\">Const</a>&lt;U&gt;: <a class=\"trait\" href=\"generic_array/trait.IntoArrayLength.html\" title=\"trait generic_array::IntoArrayLength\">IntoArrayLength</a>&lt;ArrayLength = N&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert a native array into <code>GenericArray</code> of the same length and type.</p>\n<p>This is the <code>const</code> equivalent of using the standard <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\"><code>From</code></a>/<a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\"><code>Into</code></a> traits methods.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_array\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#951-956\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.into_array\" class=\"fn\">into_array</a>&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt;(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; U]</a><div class=\"where\">where\n    <a class=\"struct\" href=\"typenum/gen/generic_const_mappings/struct.Const.html\" title=\"struct typenum::gen::generic_const_mappings::Const\">Const</a>&lt;U&gt;: <a class=\"trait\" href=\"generic_array/trait.IntoArrayLength.html\" title=\"trait generic_array::IntoArrayLength\">IntoArrayLength</a>&lt;ArrayLength = N&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert the <code>GenericArray</code> into a native array of the same length and type.</p>\n<p>This is the <code>const</code> equivalent of using the standard <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\"><code>From</code></a>/<a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.Into.html\" title=\"trait core::convert::Into\"><code>Into</code></a> traits methods.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_chunks\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#960-965\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.from_chunks\" class=\"fn\">from_chunks</a>&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt;(\n    chunks: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; U]</a>],\n) -&gt; &amp;[<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;]<div class=\"where\">where\n    <a class=\"struct\" href=\"typenum/gen/generic_const_mappings/struct.Const.html\" title=\"struct typenum::gen::generic_const_mappings::Const\">Const</a>&lt;U&gt;: <a class=\"trait\" href=\"generic_array/trait.IntoArrayLength.html\" title=\"trait generic_array::IntoArrayLength\">IntoArrayLength</a>&lt;ArrayLength = N&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert a slice of native arrays into a slice of <code>GenericArray</code>s.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_chunks_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#972-977\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.from_chunks_mut\" class=\"fn\">from_chunks_mut</a>&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt;(\n    chunks: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; U]</a>],\n) -&gt; &amp;mut [<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;]<div class=\"where\">where\n    <a class=\"struct\" href=\"typenum/gen/generic_const_mappings/struct.Const.html\" title=\"struct typenum::gen::generic_const_mappings::Const\">Const</a>&lt;U&gt;: <a class=\"trait\" href=\"generic_array/trait.IntoArrayLength.html\" title=\"trait generic_array::IntoArrayLength\">IntoArrayLength</a>&lt;ArrayLength = N&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Convert a mutable slice of native arrays into a mutable slice of <code>GenericArray</code>s.</p>\n<p>This method is <code>const</code> since Rust 1.83.0, but non-<code>const</code> before.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_chunks\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#981-986\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.into_chunks\" class=\"fn\">into_chunks</a>&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt;(\n    chunks: &amp;[<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;],\n) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; U]</a>]<div class=\"where\">where\n    <a class=\"struct\" href=\"typenum/gen/generic_const_mappings/struct.Const.html\" title=\"struct typenum::gen::generic_const_mappings::Const\">Const</a>&lt;U&gt;: <a class=\"trait\" href=\"generic_array/trait.IntoArrayLength.html\" title=\"trait generic_array::IntoArrayLength\">IntoArrayLength</a>&lt;ArrayLength = N&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Converts a slice <code>GenericArray&lt;T, N&gt;</code> into a slice of <code>[T; N]</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_chunks_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#993-998\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.into_chunks_mut\" class=\"fn\">into_chunks_mut</a>&lt;const U: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>&gt;(\n    chunks: &amp;mut [<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;],\n) -&gt; &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.array.html\">[T; U]</a>]<div class=\"where\">where\n    <a class=\"struct\" href=\"typenum/gen/generic_const_mappings/struct.Const.html\" title=\"struct typenum::gen::generic_const_mappings::Const\">Const</a>&lt;U&gt;: <a class=\"trait\" href=\"generic_array/trait.IntoArrayLength.html\" title=\"trait generic_array::IntoArrayLength\">IntoArrayLength</a>&lt;ArrayLength = N&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Converts a mutable slice <code>GenericArray&lt;T, N&gt;</code> into a mutable slice of <code>[T; N]</code></p>\n<p>This method is <code>const</code> since Rust 1.83.0, but non-<code>const</code> before.</p>\n</div></details></div></details>",0,"generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericArray%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impl_const_default.rs.html#30-39\">Source</a><a href=\"#impl-GenericArray%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"const_default/trait.ConstDefault.html\" title=\"trait const_default::ConstDefault\">ConstDefault</a>, U: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, U&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"const_default/trait.ConstDefault.html\" title=\"trait const_default::ConstDefault\">ConstDefault</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.const_default\" class=\"method\"><a class=\"src rightside\" href=\"src/generic_array/impl_const_default.rs.html#36-38\">Source</a><h4 class=\"code-header\">pub const fn <a href=\"generic_array/struct.GenericArray.html#tymethod.const_default\" class=\"fn\">const_default</a>() -&gt; Self</h4></section><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>const-default</code></strong> only.</div></span></summary><div class=\"docblock\"><p>Returns the constant “default value” for an array using <a href=\"const_default/trait.ConstDefault.html\" title=\"trait const_default::ConstDefault\">ConstDefault</a></p>\n</div></details></div></details>",0,"generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericSequence%3CT%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#598-707\">Source</a><a href=\"#impl-GenericSequence%3CT%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"generic_array/sequence/trait.GenericSequence.html\" title=\"trait generic_array::sequence::GenericSequence\">GenericSequence</a>&lt;T&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Length\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#602\">Source</a><a href=\"#associatedtype.Length\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"generic_array/sequence/trait.GenericSequence.html#associatedtype.Length\" class=\"associatedtype\">Length</a> = N</h4></section></summary><div class='docblock'><code>GenericArray</code> associated length</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Sequence\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#603\">Source</a><a href=\"#associatedtype.Sequence\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"generic_array/sequence/trait.GenericSequence.html#associatedtype.Sequence\" class=\"associatedtype\">Sequence</a> = <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Owned sequence type used in conjunction with reference implementations of <code>GenericSequence</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.generate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#606-625\">Source</a><a href=\"#method.generate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"generic_array/sequence/trait.GenericSequence.html#tymethod.generate\" class=\"fn\">generate</a>&lt;F&gt;(f: F) -&gt; <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>) -&gt; T,</div></h4></section></summary><div class='docblock'>Initializes a new sequence instance using the given function. <a href=\"generic_array/sequence/trait.GenericSequence.html#tymethod.generate\">Read more</a></div></details></div></details>","GenericSequence<T>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#85-93\">Source</a><a href=\"#impl-Hash-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#87-92\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoIterator-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/iter.rs.html#34-46\">Source</a><a href=\"#impl-IntoIterator-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Item\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/iter.rs.html#35\">Source</a><a href=\"#associatedtype.Item\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.Item\" class=\"associatedtype\">Item</a> = T</h4></section></summary><div class='docblock'>The type of the elements being iterated over.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.IntoIter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/iter.rs.html#36\">Source</a><a href=\"#associatedtype.IntoIter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" class=\"associatedtype\">IntoIter</a> = <a class=\"struct\" href=\"generic_array/struct.GenericArrayIter.html\" title=\"struct generic_array::GenericArrayIter\">GenericArrayIter</a>&lt;T, N&gt;</h4></section></summary><div class='docblock'>Which kind of iterator are we turning this into?</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/iter.rs.html#39-45\">Source</a><a href=\"#method.into_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\" class=\"fn\">into_iter</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#associatedtype.IntoIter\" title=\"type core::iter::traits::collect::IntoIterator::IntoIter\">IntoIter</a></h4></section></summary><div class='docblock'>Creates an iterator from a value. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html#tymethod.into_iter\">Read more</a></div></details></div></details>","IntoIterator","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Lengthen%3CT%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#202-244\">Source</a><a href=\"#impl-Lengthen%3CT%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"generic_array/sequence/trait.Lengthen.html\" title=\"trait generic_array::sequence::Lengthen\">Lengthen</a>&lt;T&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; + <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>,\n    <a class=\"type\" href=\"typenum/operator_aliases/type.Add1.html\" title=\"type typenum::operator_aliases::Add1\">Add1</a>&lt;N&gt;: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>, Output = N&gt;,\n    <a class=\"type\" href=\"typenum/operator_aliases/type.Sub1.html\" title=\"type typenum::operator_aliases::Sub1\">Sub1</a>&lt;<a class=\"type\" href=\"typenum/operator_aliases/type.Add1.html\" title=\"type typenum::operator_aliases::Add1\">Add1</a>&lt;N&gt;&gt;: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Longer\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#209\">Source</a><a href=\"#associatedtype.Longer\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"generic_array/sequence/trait.Lengthen.html#associatedtype.Longer\" class=\"associatedtype\">Longer</a> = <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, &lt;N as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'><code>GenericSequence</code> that has one more element than <code>Self</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.append\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#212-226\">Source</a><a href=\"#method.append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"generic_array/sequence/trait.Lengthen.html#tymethod.append\" class=\"fn\">append</a>(self, last: T) -&gt; Self::<a class=\"associatedtype\" href=\"generic_array/sequence/trait.Lengthen.html#associatedtype.Longer\" title=\"type generic_array::sequence::Lengthen::Longer\">Longer</a></h4></section></summary><div class='docblock'>Returns a new array with the given element appended to the end of it. <a href=\"generic_array/sequence/trait.Lengthen.html#tymethod.append\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prepend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#229-243\">Source</a><a href=\"#method.prepend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"generic_array/sequence/trait.Lengthen.html#tymethod.prepend\" class=\"fn\">prepend</a>(self, first: T) -&gt; Self::<a class=\"associatedtype\" href=\"generic_array/sequence/trait.Lengthen.html#associatedtype.Longer\" title=\"type generic_array::sequence::Lengthen::Longer\">Longer</a></h4></section></summary><div class='docblock'>Returns a new array with the given element prepended to the front of it. <a href=\"generic_array/sequence/trait.Lengthen.html#tymethod.prepend\">Read more</a></div></details></div></details>","Lengthen<T>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LowerHex-for-GenericArray%3Cu8,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/hex.rs.html#110-118\">Source</a><a href=\"#impl-LowerHex-for-GenericArray%3Cu8,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.LowerHex.html\" title=\"trait core::fmt::LowerHex\">LowerHex</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>, N&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;N&gt; + <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>,\n    <a class=\"type\" href=\"typenum/operator_aliases/type.Sum.html\" title=\"type typenum::operator_aliases::Sum\">Sum</a>&lt;N, N&gt;: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/hex.rs.html#115-117\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.LowerHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.LowerHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","LowerHex","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MappedGenericSequence%3CT,+U%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#709-714\">Source</a><a href=\"#impl-MappedGenericSequence%3CT,+U%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"generic_array/functional/trait.MappedGenericSequence.html\" title=\"trait generic_array::functional::MappedGenericSequence\">MappedGenericSequence</a>&lt;T, U&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;<div class=\"where\">where\n    <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;U, N&gt;: <a class=\"trait\" href=\"generic_array/sequence/trait.GenericSequence.html\" title=\"trait generic_array::sequence::GenericSequence\">GenericSequence</a>&lt;U, Length = N&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Mapped\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#713\">Source</a><a href=\"#associatedtype.Mapped\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"generic_array/functional/trait.MappedGenericSequence.html#associatedtype.Mapped\" class=\"associatedtype\">Mapped</a> = <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;U, N&gt;</h4></section></summary><div class='docblock'>Mapped sequence type</div></details></div></details>","MappedGenericSequence<T, U>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#44-49\">Source</a><a href=\"#impl-Ord-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#46-48\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1021-1023\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1060-1062\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1086-1088\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#29-34\">Source</a><a href=\"#impl-PartialEq-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#31-33\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#37-42\">Source</a><a href=\"#impl-PartialOrd-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#39-41\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1398\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1416\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1434\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#1452\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Remove%3CT,+N%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#493-535\">Source</a><a href=\"#impl-Remove%3CT,+N%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"generic_array/sequence/trait.Remove.html\" title=\"trait generic_array::sequence::Remove\">Remove</a>&lt;T, N&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;,\n    <a class=\"type\" href=\"typenum/operator_aliases/type.Sub1.html\" title=\"type typenum::operator_aliases::Sub1\">Sub1</a>&lt;N&gt;: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#498\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"generic_array/sequence/trait.Remove.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, &lt;N as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>Resulting sequence formed by removing an element at the given index.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#501-517\">Source</a><a href=\"#method.remove_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"generic_array/sequence/trait.Remove.html#tymethod.remove_unchecked\" class=\"fn\">remove_unchecked</a>(self, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>) -&gt; (T, Self::<a class=\"associatedtype\" href=\"generic_array/sequence/trait.Remove.html#associatedtype.Output\" title=\"type generic_array::sequence::Remove::Output\">Output</a>)</h4></section></summary><div class='docblock'>Removes an element at the given index without bounds checking,\nshifting elements after the given index to the left to fill the gap,\nresulting in a time complexity of O(n) where <code>n=N-idx-1</code> <a href=\"generic_array/sequence/trait.Remove.html#tymethod.remove_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#520-534\">Source</a><a href=\"#method.swap_remove_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"generic_array/sequence/trait.Remove.html#tymethod.swap_remove_unchecked\" class=\"fn\">swap_remove_unchecked</a>(self, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>) -&gt; (T, Self::<a class=\"associatedtype\" href=\"generic_array/sequence/trait.Remove.html#associatedtype.Output\" title=\"type generic_array::sequence::Remove::Output\">Output</a>)</h4></section></summary><div class='docblock'>Removes an element at the given index without bounds checking, swapping it with the last element. <a href=\"generic_array/sequence/trait.Remove.html#tymethod.swap_remove_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#434-443\">Source</a><a href=\"#method.remove\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"generic_array/sequence/trait.Remove.html#method.remove\" class=\"fn\">remove</a>(self, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>) -&gt; (T, Self::<a class=\"associatedtype\" href=\"generic_array/sequence/trait.Remove.html#associatedtype.Output\" title=\"type generic_array::sequence::Remove::Output\">Output</a>)</h4></section></summary><div class='docblock'>Removes an element at the given index, shifting elements\nafter the given index to the left to fill the gap, resulting\nin a time complexity of O(n) where <code>n=N-idx-1</code> <a href=\"generic_array/sequence/trait.Remove.html#method.remove\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap_remove\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#461-470\">Source</a><a href=\"#method.swap_remove\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"generic_array/sequence/trait.Remove.html#method.swap_remove\" class=\"fn\">swap_remove</a>(self, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.usize.html\">usize</a>) -&gt; (T, Self::<a class=\"associatedtype\" href=\"generic_array/sequence/trait.Remove.html#associatedtype.Output\" title=\"type generic_array::sequence::Remove::Output\">Output</a>)</h4></section></summary><div class='docblock'>Removes an element at the given index, swapping it with the last element. <a href=\"generic_array/sequence/trait.Remove.html#method.swap_remove\">Read more</a></div></details></div></details>","Remove<T, N>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impl_serde.rs.html#10-26\">Source</a><a href=\"#impl-Serialize-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"serde_core/ser/trait.Serialize.html\" title=\"trait serde_core::ser::Serialize\">Serialize</a>,</div></h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>serde</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impl_serde.rs.html#15-25\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde_core/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(&amp;self, serializer: S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S::<a class=\"associatedtype\" href=\"serde_core/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde_core::ser::Serializer::Ok\">Ok</a>, S::<a class=\"associatedtype\" href=\"serde_core/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde_core::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde_core/ser/trait.Serializer.html\" title=\"trait serde_core::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde_core/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Shorten%3CT%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#246-279\">Source</a><a href=\"#impl-Shorten%3CT%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N&gt; <a class=\"trait\" href=\"generic_array/sequence/trait.Shorten.html\" title=\"trait generic_array::sequence::Shorten\">Shorten</a>&lt;T&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt; + <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>,\n    <a class=\"type\" href=\"typenum/operator_aliases/type.Sub1.html\" title=\"type typenum::operator_aliases::Sub1\">Sub1</a>&lt;N&gt;: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>, Output = N&gt;,\n    <a class=\"type\" href=\"typenum/operator_aliases/type.Add1.html\" title=\"type typenum::operator_aliases::Add1\">Add1</a>&lt;<a class=\"type\" href=\"typenum/operator_aliases/type.Sub1.html\" title=\"type typenum::operator_aliases::Sub1\">Sub1</a>&lt;N&gt;&gt;: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Shorter\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#253\">Source</a><a href=\"#associatedtype.Shorter\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"generic_array/sequence/trait.Shorten.html#associatedtype.Shorter\" class=\"associatedtype\">Shorter</a> = <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, &lt;N as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"typenum/bit/struct.B1.html\" title=\"struct typenum::bit::B1\">B1</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'><code>GenericSequence</code> that has one less element than <code>Self</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop_back\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#256-265\">Source</a><a href=\"#method.pop_back\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"generic_array/sequence/trait.Shorten.html#tymethod.pop_back\" class=\"fn\">pop_back</a>(self) -&gt; (Self::<a class=\"associatedtype\" href=\"generic_array/sequence/trait.Shorten.html#associatedtype.Shorter\" title=\"type generic_array::sequence::Shorten::Shorter\">Shorter</a>, T)</h4></section></summary><div class='docblock'>Returns a new array without the last element, and the last element. <a href=\"generic_array/sequence/trait.Shorten.html#tymethod.pop_back\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop_front\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#268-278\">Source</a><a href=\"#method.pop_front\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"generic_array/sequence/trait.Shorten.html#tymethod.pop_front\" class=\"fn\">pop_front</a>(self) -&gt; (T, Self::<a class=\"associatedtype\" href=\"generic_array/sequence/trait.Shorten.html#associatedtype.Shorter\" title=\"type generic_array::sequence::Shorten::Shorter\">Shorter</a>)</h4></section></summary><div class='docblock'>Returns a new array without the first element, and the first element.\nExample: <a href=\"generic_array/sequence/trait.Shorten.html#tymethod.pop_front\">Read more</a></div></details></div></details>","Shorten<T>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Split%3CT,+K%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#296-318\">Source</a><a href=\"#impl-Split%3CT,+K%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N, K&gt; <a class=\"trait\" href=\"generic_array/sequence/trait.Split.html\" title=\"trait generic_array::sequence::Split\">Split</a>&lt;T, K&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;K&gt;,\n    K: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>,\n    <a class=\"type\" href=\"typenum/operator_aliases/type.Diff.html\" title=\"type typenum::operator_aliases::Diff\">Diff</a>&lt;N, K&gt;: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.First\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#303\">Source</a><a href=\"#associatedtype.First\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"generic_array/sequence/trait.Split.html#associatedtype.First\" class=\"associatedtype\">First</a> = <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, K&gt;</h4></section></summary><div class='docblock'>First part of the resulting split array</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Second\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#304\">Source</a><a href=\"#associatedtype.Second\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"generic_array/sequence/trait.Split.html#associatedtype.Second\" class=\"associatedtype\">Second</a> = <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, &lt;N as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;K&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>Second part of the resulting split array</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#307-317\">Source</a><a href=\"#method.split\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"generic_array/sequence/trait.Split.html#tymethod.split\" class=\"fn\">split</a>(self) -&gt; (Self::<a class=\"associatedtype\" href=\"generic_array/sequence/trait.Split.html#associatedtype.First\" title=\"type generic_array::sequence::Split::First\">First</a>, Self::<a class=\"associatedtype\" href=\"generic_array/sequence/trait.Split.html#associatedtype.Second\" title=\"type generic_array::sequence::Split::Second\">Second</a>)</h4></section></summary><div class='docblock'>Splits an array at the given index, returning the separate parts of the array.</div></details></div></details>","Split<T, K>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CBox%3C%5BT%5D%3E%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impl_alloc.rs.html#109-116\">Source</a><a href=\"#impl-TryFrom%3CBox%3C%5BT%5D%3E%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>&gt;&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>alloc</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impl_alloc.rs.html#110\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"generic_array/struct.LengthError.html\" title=\"struct generic_array::LengthError\">LengthError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impl_alloc.rs.html#113-115\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(value: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.slice.html\">[T]</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Box<[T]>>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3CVec%3CT%3E%3E-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impl_alloc.rs.html#5-22\">Source</a><a href=\"#impl-TryFrom%3CVec%3CT%3E%3E-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>alloc</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impl_alloc.rs.html#6\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"generic_array/struct.LengthError.html\" title=\"struct generic_array::LengthError\">LengthError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impl_alloc.rs.html#8-21\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(v: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<Vec<T>>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Unflatten%3CT,+NM,+N%3E-for-GenericArray%3CT,+NM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#637-649\">Source</a><a href=\"#impl-Unflatten%3CT,+NM,+N%3E-for-GenericArray%3CT,+NM%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, NM, N&gt; <a class=\"trait\" href=\"generic_array/sequence/trait.Unflatten.html\" title=\"trait generic_array::sequence::Unflatten\">Unflatten</a>&lt;T, NM, N&gt; for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, NM&gt;<div class=\"where\">where\n    NM: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;N&gt;,\n    N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>,\n    <a class=\"type\" href=\"typenum/operator_aliases/type.Quot.html\" title=\"type typenum::operator_aliases::Quot\">Quot</a>&lt;NM, N&gt;: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#643\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"generic_array/sequence/trait.Unflatten.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;<a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;, &lt;NM as <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;N&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>Unflattened sequence type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unflatten\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/sequence.rs.html#646-648\">Source</a><a href=\"#method.unflatten\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"generic_array/sequence/trait.Unflatten.html#tymethod.unflatten\" class=\"fn\">unflatten</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"generic_array/sequence/trait.Unflatten.html#associatedtype.Output\" title=\"type generic_array::sequence::Unflatten::Output\">Output</a></h4></section></summary><div class='docblock'>Unflattens the sequence into a sequence of <code>GenericArray</code>s. <a href=\"generic_array/sequence/trait.Unflatten.html#tymethod.unflatten\">Read more</a></div></details></div></details>","Unflatten<T, NM, N>","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UpperHex-for-GenericArray%3Cu8,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/hex.rs.html#120-128\">Source</a><a href=\"#impl-UpperHex-for-GenericArray%3Cu8,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;N&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.UpperHex.html\" title=\"trait core::fmt::UpperHex\">UpperHex</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.u8.html\">u8</a>, N&gt;<div class=\"where\">where\n    N: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;N&gt; + <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>,\n    <a class=\"type\" href=\"typenum/operator_aliases/type.Sum.html\" title=\"type typenum::operator_aliases::Sum\">Sum</a>&lt;N, N&gt;: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/hex.rs.html#125-127\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.UpperHex.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.UpperHex.html#tymethod.fmt\">Read more</a></div></details></div></details>","UpperHex","generic_array::ConstGenericArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroize-for-GenericArray%3CZ,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impl_zeroize.rs.html#5-9\">Source</a><a href=\"#impl-Zeroize-for-GenericArray%3CZ,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Z: <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a>, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;Z, N&gt;</h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>zeroize</code></strong> only.</div></span></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/generic_array/impl_zeroize.rs.html#6-8\">Source</a><a href=\"#method.zeroize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zeroize/trait.Zeroize.html#tymethod.zeroize\" class=\"fn\">zeroize</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Zero out this object from memory using Rust intrinsics which ensure the\nzeroization operation is not “optimized away” by the compiler.</div></details></div></details>","Zeroize","generic_array::ConstGenericArray"],["<section id=\"impl-Copy-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#27\">Source</a><a href=\"#impl-Copy-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;<div class=\"where\">where\n    N::<a class=\"associatedtype\" href=\"generic_array/trait.ArrayLength.html#associatedtype.ArrayType\" title=\"type generic_array::ArrayLength::ArrayType\">ArrayType</a>&lt;T&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","generic_array::ConstGenericArray"],["<section id=\"impl-Eq-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impls.rs.html#35\">Source</a><a href=\"#impl-Eq-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section>","Eq","generic_array::ConstGenericArray"],["<section id=\"impl-Send-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#537\">Source</a><a href=\"#impl-Send-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section>","Send","generic_array::ConstGenericArray"],["<section id=\"impl-Sync-for-GenericArray%3CT,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/lib.rs.html#538\">Source</a><a href=\"#impl-Sync-for-GenericArray%3CT,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;T, N&gt;</h3></section>","Sync","generic_array::ConstGenericArray"],["<section id=\"impl-ZeroizeOnDrop-for-GenericArray%3CZ,+N%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/generic_array/impl_zeroize.rs.html#11\">Source</a><a href=\"#impl-ZeroizeOnDrop-for-GenericArray%3CZ,+N%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Z: <a class=\"trait\" href=\"zeroize/trait.ZeroizeOnDrop.html\" title=\"trait zeroize::ZeroizeOnDrop\">ZeroizeOnDrop</a>, N: <a class=\"trait\" href=\"generic_array/trait.ArrayLength.html\" title=\"trait generic_array::ArrayLength\">ArrayLength</a>&gt; <a class=\"trait\" href=\"zeroize/trait.ZeroizeOnDrop.html\" title=\"trait zeroize::ZeroizeOnDrop\">ZeroizeOnDrop</a> for <a class=\"struct\" href=\"generic_array/struct.GenericArray.html\" title=\"struct generic_array::GenericArray\">GenericArray</a>&lt;Z, N&gt;</h3><span class=\"item-info\"><div class=\"stab portability\">Available on <strong>crate feature <code>zeroize</code></strong> only.</div></span></section>","ZeroizeOnDrop","generic_array::ConstGenericArray"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[186238]}